{"version":3,"sources":["App.js","components/Timer.js","components/PomodoroConfig.js","components/StartStop.js","reportWebVitals.js","index.js"],"names":["bgColor","Timer","timerLabel","timeleftDisplay","className","id","PomodoroConfig","sessionTime","breakTime","increment","decrement","onClick","StartStop","reset","start","pause","App","props","state","countdown","seconds","isBreak","isPaused","isStarted","bind","timer","updateHTML","window","setInterval","this","clearInterval","setState","audioBeep","currentTime","e","target","test","Math","min","max","minutes","floor","remainderSeconds","play","int","bg","document","querySelectorAll","setAttribute","body","style","backgroundColor","transition","preload","src","ref","audio","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebe82603.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport Timer from './components/Timer'\nimport PomodoroConfig from './components/PomodoroConfig';\nimport StartStop from './components/StartStop';\n\nlet bgColor;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countdown: 0,\n      seconds: 1500,\n      sessionTime: 25,\n      breakTime: 5,\n      isBreak: true,\n      isPaused: true,\n      isStarted: 0,\n      timerLabel: 'Work Time'\n    }\n    this.reset = this.reset.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.timeleftDisplay = this.timeleftDisplay.bind(this);\n    this.timer = this.timer.bind(this);\n    this.updateHTML = this.updateHTML.bind(this);\n    this.start = this.start.bind(this);\n    this.pause = this.pause.bind(this);\n  }\n  componentDidMount() {\n    window.setInterval(this.updateHTML, 100);\n  }\n  reset() {\n    clearInterval(this.state.countdown);\n    this.setState({\n      countdown: 0,\n      seconds: 1500,\n      sessionTime: 25,\n      breakTime: 5,\n      isBreak: true,\n      isPaused: true,\n      isStarted: 0,\n      timerLabel: 'Work Time'\n    })\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n  start() {\n    this.setState({\n      isPaused: false,\n      isStarted: this.state.isStarted + 1\n    })\n    if (this.state.isPaused && this.state.isStarted === 0) {\n      let countdown = setInterval(this.timer, 1000);\n      this.setState({\n        countdown: countdown\n      })\n    }\n  }\n  pause() {\n    this.setState({\n      isPaused: true,\n      isStarted: 0\n    })\n    if (this.state.isStarted > 0) {\n      clearInterval(this.state.countdown);\n      this.audioBeep.pause();\n      this.audioBeep.currentTime = 0;\n    }\n  }\n  increment(e) {\n    const id = e.target.id\n    if (this.state.isPaused) {\n      if (/break/.test(id)) {\n        this.setState({\n          breakTime: Math.min(this.state.breakTime + 1, 60)\n        })\n        if (!this.state.isBreak) {\n          this.setState({\n            seconds: (Math.min(this.state.breakTime + 1, 60)) * 60\n          })\n        }\n      } else {\n        this.setState({\n          sessionTime: Math.min(this.state.sessionTime + 1, 60)\n        })\n        if (this.state.isBreak) {\n          this.setState({\n            seconds: (Math.min(this.state.sessionTime + 1, 60)) * 60\n          })\n        }\n      }\n    }\n  }\n\n  decrement(e) {\n    const id = e.target.id\n    if (this.state.isPaused) {\n      if (/break/.test(id)) {\n        this.setState({\n          breakTime: Math.max(this.state.breakTime - 1, 1)\n        })\n        if (!this.state.isBreak) {\n          this.setState({\n            seconds: (Math.max(this.state.breakTime - 1, 1)) * 60\n          })\n        }\n      } else {\n        this.setState({\n          sessionTime: Math.max(this.state.sessionTime - 1, 1)\n        })\n        if (this.state.isBreak) {\n          this.setState({\n            seconds: (Math.max(this.state.sessionTime - 1, 1)) * 60\n          })\n        }\n      }\n    }\n  }\n  timeleftDisplay() {\n    let minutes = Math.floor(this.state.seconds / 60); // obtiene los minutos\n    let remainderSeconds = this.state.seconds % 60; // el resto da los segundos\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    remainderSeconds = remainderSeconds < 10 ? '0' + remainderSeconds : remainderSeconds;\n    return `${minutes}:${remainderSeconds}`\n  }\n  timer() {\n    this.setState({\n      seconds: this.state.seconds - 1\n    })\n    if (this.state.seconds === 0) {\n      this.audioBeep.currentTime = 0;\n      this.audioBeep.play();\n      let int = setInterval(() => {\n        if (this.audioBeep.currentTime > 1) {\n          this.audioBeep.pause();\n          clearInterval(int);\n        }\n      }, 100)\n    }\n    if (this.state.seconds < 0) {\n      clearInterval(this.state.countdown);\n      this.setState({\n        seconds: (this.state.isBreak ? this.state.breakTime : this.state.sessionTime) * 60,\n        isBreak: !this.state.isBreak\n      })\n\n      let countdown = setInterval(this.timer, 1000);\n      this.setState({\n        countdown: countdown\n      })\n    }\n  }\n  updateHTML() {\n    if (this.state.isBreak) {\n      this.setState({\n        timerLabel: 'Work Time'\n      })\n      bgColor = \"rgb(113, 105, 185)\";\n      const bg = document.querySelectorAll('.bgcolor');\n      for (let bgs of bg) {\n        bgs.setAttribute('style', `color: ${bgColor}`)\n      }\n      document.body.style.backgroundColor = bgColor;\n      document.body.style.transition = \"background-color 1s ease\"\n    }\n    else {\n      this.setState({\n        timerLabel: 'Break Time'\n      })\n      bgColor = \"rgb(81, 179, 122)\";\n      const bg = document.querySelectorAll('.bgcolor');\n      for (let bgs of bg) {\n        bgs.setAttribute('style', `color: ${bgColor}`)\n      }\n      document.body.style.backgroundColor = bgColor;\n      document.body.style.transition = \"background-color 1s ease\"\n    }\n  }\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"title\">\n          <i className=\"fas fa-stopwatch\"></i>\n               Pomodoro Timer\n          </div>\n        <div id=\"pomodoro\">\n          <PomodoroConfig sessionTime={this.state.sessionTime} breakTime={this.state.breakTime} increment={this.increment} decrement={this.decrement} />\n          <Timer timerLabel={this.state.timerLabel} timeleftDisplay={this.timeleftDisplay()} />\n          <StartStop reset={this.reset} start={this.start} pause={this.pause} />\n        </div>\n        <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" ref={(audio) => {\n          this.audioBeep = audio;\n        }}></audio>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\n\r\nexport default function Timer({timerLabel, timeleftDisplay}) {\r\n     return (\r\n          <div className=\"timer\">\r\n               <div id=\"timer-label\">{timerLabel}</div>\r\n               <div id=\"time-left\">{timeleftDisplay}</div>\r\n          </div>\r\n     );\r\n}","import React from 'react';\r\n\r\nexport default function PomodoroConfig({sessionTime, breakTime, increment, decrement}) {\r\n     return (\r\n          <div className=\"config\">\r\n               <div className=\"length-control\">\r\n                    <div id=\"break-label\">Break Length</div>\r\n                    <div className=\"controls\">\r\n                         <div className=\"config-length\">\r\n                              <i className=\"fas fa-arrow-alt-circle-down\" id=\"break-decrement\" onClick={decrement}></i>\r\n                         </div>\r\n                         <div id=\"break-length\" className=\"config-length\">{breakTime}</div>\r\n                         <div className=\"config-length\">\r\n                              <i className=\"fas fa-arrow-alt-circle-up\" id=\"break-increment\" onClick={increment}></i>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n               <div className=\"length-control\">\r\n                    <div id=\"session-label\">Session Length</div>\r\n                    <div className=\"controls\">\r\n                         <div className=\"config-length\">\r\n                              <i className=\"fas fa-arrow-alt-circle-down\" id=\"session-decrement\" onClick={decrement}></i>\r\n                         </div>\r\n                         <div id=\"session-length\" className=\"config-length\">{sessionTime}</div>\r\n                         <div className=\"config-length\">\r\n                              <i className=\"fas fa-arrow-alt-circle-up\" id=\"session-increment\" onClick={increment}></i>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          </div>\r\n     );\r\n}","import React from 'react';\r\n\r\nexport default function StartStop({reset, start, pause}){\r\n     return (\r\n          <div id=\"start_stop\">\r\n          <div className=\"start button bgcolor\" onClick={start}>\r\n               <i className=\"fas fa-play\"></i>\r\n               Start\r\n          </div>\r\n          <div className=\"pause button bgcolor\" onClick={pause}>\r\n               <i className=\"fas fa-pause\"></i>\r\n               Pause\r\n          </div>\r\n          <div id=\"reset\" className=\"button bgcolor\" onClick={reset}>\r\n               <i className=\"fas fa-sync-alt\"></i>\r\n               Reset\r\n          </div>\r\n     </div>\r\n     );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}